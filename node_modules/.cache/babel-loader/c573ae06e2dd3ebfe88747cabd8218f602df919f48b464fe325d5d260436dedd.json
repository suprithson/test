{"ast":null,"code":"var _jsxFileName = \"/Users/hey/Downloads/shop641/src/config/Provider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app_name = \"ShopApp\";\nexport const Context = /*#__PURE__*/createContext({\n  info: null,\n  appName: app_name,\n  cartNo: 0,\n  cart: [],\n  pushCart: arr => {},\n  total: 0,\n  updateInfo: obj => {}\n});\nexport default function Provider({\n  children\n}) {\n  _s();\n  const [appName, setAppName] = useState(app_name);\n  const [info, setInfo] = useState(null);\n  const [cart, setCart] = useState([]);\n  const [cartNo, setCartNo] = useState(0);\n  const [total, setTotal] = useState(0);\n  const pushCart = arr => {\n    if (arr.length === 0) {\n      setCartNo(0);\n      setCart([]);\n      return;\n    }\n    let total = 0,\n      qty = 0;\n    arr.forEach(item => {\n      qty += item.qty;\n      total += item.qty * item.price;\n    });\n    setCartNo(qty);\n    setCart(arr);\n    setTotal(total.toFixed(2));\n  };\n  const updateInfo = obj => setInfo(obj);\n  useEffect(() => {\n    // Get userinfo\n    const u = localStorage.getItem('user');\n    if (u) updateInfo(JSON.parse(u));\n\n    // Get cart from localStorage\n    let c = localStorage.getItem('aruncart');\n    if (c) {\n      c = JSON.parse(c);\n      pushCart(c);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      appName,\n      cart,\n      cartNo,\n      info,\n      pushCart,\n      total,\n      updateInfo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Provider, \"rPNyLVZrfcJMQ9CN8+nJa99BCvQ=\");\n_c = Provider;\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","useEffect","useState","createContext","jsxDEV","_jsxDEV","app_name","Context","info","appName","cartNo","cart","pushCart","arr","total","updateInfo","obj","Provider","children","_s","setAppName","setInfo","setCart","setCartNo","setTotal","length","qty","forEach","item","price","toFixed","u","localStorage","getItem","JSON","parse","c","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hey/Downloads/shop641/src/config/Provider.js"],"sourcesContent":["import React, {useEffect, useState, createContext} from 'react'\r\nconst app_name = \"ShopApp\"\r\nexport const Context = createContext({\r\n    info: null,\r\n    appName: app_name,\r\n    cartNo: 0,\r\n    cart: [],\r\n    pushCart: arr=>{},\r\n    total: 0,\r\n    updateInfo: obj=>{}\r\n})\r\n\r\nexport default function Provider({children}) {\r\n    const [appName, setAppName] = useState(app_name)\r\n    const [info, setInfo] = useState(null)\r\n    const [cart, setCart] = useState([])\r\n    const [cartNo, setCartNo] = useState(0)\r\n    const [total, setTotal] = useState(0)\r\n    const pushCart = arr => {\r\n        if(arr.length === 0){\r\n            setCartNo(0)\r\n            setCart([])\r\n            return\r\n        }\r\n        let total = 0, qty = 0\r\n        arr.forEach(item=>{\r\n            qty += item.qty\r\n            total += (item.qty * item.price)\r\n        })\r\n        setCartNo(qty)\r\n        setCart(arr)\r\n        setTotal(total.toFixed(2))\r\n    }\r\n\r\n    const updateInfo = obj => setInfo(obj)\r\n\r\n    useEffect(()=>{\r\n        // Get userinfo\r\n        const u = localStorage.getItem('user')\r\n        if (u) updateInfo(JSON.parse(u))\r\n        \r\n        // Get cart from localStorage\r\n        let c = localStorage.getItem('aruncart')\r\n        if(c){\r\n            c = JSON.parse(c)\r\n            pushCart(c)\r\n        }\r\n    }, [])\r\n\r\n  return (\r\n    <Context.Provider \r\n        value={{\r\n            appName,\r\n            cart,\r\n            cartNo,\r\n            info,\r\n            pushCart,\r\n            total,\r\n            updateInfo\r\n        }}\r\n    >\r\n        {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,EAAEC,aAAa,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC/D,MAAMC,QAAQ,GAAG,SAAS;AAC1B,OAAO,MAAMC,OAAO,gBAAGJ,aAAa,CAAC;EACjCK,IAAI,EAAE,IAAI;EACVC,OAAO,EAAEH,QAAQ;EACjBI,MAAM,EAAE,CAAC;EACTC,IAAI,EAAE,EAAE;EACRC,QAAQ,EAAEC,GAAG,IAAE,CAAC,CAAC;EACjBC,KAAK,EAAE,CAAC;EACRC,UAAU,EAAEC,GAAG,IAAE,CAAC;AACtB,CAAC,CAAC;AAEF,eAAe,SAASC,QAAQA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACV,OAAO,EAAEW,UAAU,CAAC,GAAGlB,QAAQ,CAACI,QAAQ,CAAC;EAChD,MAAM,CAACE,IAAI,EAAEa,OAAO,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEW,OAAO,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,MAAM,EAAEa,SAAS,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACY,KAAK,EAAEU,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMU,QAAQ,GAAGC,GAAG,IAAI;IACpB,IAAGA,GAAG,CAACY,MAAM,KAAK,CAAC,EAAC;MAChBF,SAAS,CAAC,CAAC,CAAC;MACZD,OAAO,CAAC,EAAE,CAAC;MACX;IACJ;IACA,IAAIR,KAAK,GAAG,CAAC;MAAEY,GAAG,GAAG,CAAC;IACtBb,GAAG,CAACc,OAAO,CAACC,IAAI,IAAE;MACdF,GAAG,IAAIE,IAAI,CAACF,GAAG;MACfZ,KAAK,IAAKc,IAAI,CAACF,GAAG,GAAGE,IAAI,CAACC,KAAM;IACpC,CAAC,CAAC;IACFN,SAAS,CAACG,GAAG,CAAC;IACdJ,OAAO,CAACT,GAAG,CAAC;IACZW,QAAQ,CAACV,KAAK,CAACgB,OAAO,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMf,UAAU,GAAGC,GAAG,IAAIK,OAAO,CAACL,GAAG,CAAC;EAEtCf,SAAS,CAAC,MAAI;IACV;IACA,MAAM8B,CAAC,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACtC,IAAIF,CAAC,EAAEhB,UAAU,CAACmB,IAAI,CAACC,KAAK,CAACJ,CAAC,CAAC,CAAC;;IAEhC;IACA,IAAIK,CAAC,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACxC,IAAGG,CAAC,EAAC;MACDA,CAAC,GAAGF,IAAI,CAACC,KAAK,CAACC,CAAC,CAAC;MACjBxB,QAAQ,CAACwB,CAAC,CAAC;IACf;EACJ,CAAC,EAAE,EAAE,CAAC;EAER,oBACE/B,OAAA,CAACE,OAAO,CAACU,QAAQ;IACboB,KAAK,EAAE;MACH5B,OAAO;MACPE,IAAI;MACJD,MAAM;MACNF,IAAI;MACJI,QAAQ;MACRE,KAAK;MACLC;IACJ,CAAE;IAAAG,QAAA,EAEDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEvB;AAACtB,EAAA,CApDuBF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}