[{"/Users/hey/Downloads/shop641/src/index.js":"1","/Users/hey/Downloads/shop641/src/reportWebVitals.js":"2","/Users/hey/Downloads/shop641/src/App.js":"3","/Users/hey/Downloads/shop641/src/AppNav.js":"4","/Users/hey/Downloads/shop641/src/config/Provider.js":"5","/Users/hey/Downloads/shop641/src/Load.js":"6","/Users/hey/Downloads/shop641/src/views/AdminOrders.js":"7","/Users/hey/Downloads/shop641/src/views/ErrorPage.js":"8","/Users/hey/Downloads/shop641/src/views/AdminOrderView.js":"9","/Users/hey/Downloads/shop641/src/views/Orders.js":"10","/Users/hey/Downloads/shop641/src/views/Cart.js":"11","/Users/hey/Downloads/shop641/src/views/AccountLogin.js":"12","/Users/hey/Downloads/shop641/src/views/Account.js":"13","/Users/hey/Downloads/shop641/src/views/HomeLayout.js":"14","/Users/hey/Downloads/shop641/src/views/AdminProdEdit.js":"15","/Users/hey/Downloads/shop641/src/views/Home.js":"16","/Users/hey/Downloads/shop641/src/views/AdminProducts.js":"17","/Users/hey/Downloads/shop641/src/views/AdminProdAdd.js":"18","/Users/hey/Downloads/shop641/src/views/AdminDash.js":"19","/Users/hey/Downloads/shop641/src/views/AdminLayout.js":"20","/Users/hey/Downloads/shop641/src/views/AdminLogin.js":"21","/Users/hey/Downloads/shop641/src/config/firebase.js":"22","/Users/hey/Downloads/shop641/src/config/tables.js":"23","/Users/hey/Downloads/shop641/src/components/Auth.js":"24","/Users/hey/Downloads/shop641/src/components/Input.js":"25","/Users/hey/Downloads/shop641/src/components/Button.js":"26","/Users/hey/Downloads/shop641/src/components/AuthAdmin.js":"27"},{"size":535,"mtime":1700233484000,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1700233486000,"results":"30","hashOfConfig":"29"},{"size":427,"mtime":1700235482000,"results":"31","hashOfConfig":"29"},{"size":3603,"mtime":1700235508000,"results":"32","hashOfConfig":"29"},{"size":1590,"mtime":1702174468357,"results":"33","hashOfConfig":"29"},{"size":563,"mtime":1697189492000,"results":"34","hashOfConfig":"29"},{"size":2192,"mtime":1697478986000,"results":"35","hashOfConfig":"29"},{"size":515,"mtime":1697189022000,"results":"36","hashOfConfig":"29"},{"size":3094,"mtime":1697479266000,"results":"37","hashOfConfig":"29"},{"size":1569,"mtime":1697451506000,"results":"38","hashOfConfig":"29"},{"size":9867,"mtime":1697479832000,"results":"39","hashOfConfig":"29"},{"size":6419,"mtime":1697479350000,"results":"40","hashOfConfig":"29"},{"size":3470,"mtime":1697479408000,"results":"41","hashOfConfig":"29"},{"size":1865,"mtime":1697444932000,"results":"42","hashOfConfig":"29"},{"size":5799,"mtime":1697479114000,"results":"43","hashOfConfig":"29"},{"size":3377,"mtime":1700240704000,"results":"44","hashOfConfig":"29"},{"size":3154,"mtime":1697223856000,"results":"45","hashOfConfig":"29"},{"size":3934,"mtime":1697479092000,"results":"46","hashOfConfig":"29"},{"size":792,"mtime":1697223920000,"results":"47","hashOfConfig":"29"},{"size":1546,"mtime":1697477490000,"results":"48","hashOfConfig":"29"},{"size":2780,"mtime":1697478882000,"results":"49","hashOfConfig":"29"},{"size":714,"mtime":1702068765625,"results":"50","hashOfConfig":"29"},{"size":108,"mtime":1697285390000,"results":"51","hashOfConfig":"29"},{"size":342,"mtime":1697479976000,"results":"52","hashOfConfig":"29"},{"size":165,"mtime":1697197442000,"results":"53","hashOfConfig":"29"},{"size":944,"mtime":1697210618000,"results":"54","hashOfConfig":"29"},{"size":351,"mtime":1697477462000,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10ig1tq",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},"/Users/hey/Downloads/shop641/src/index.js",[],[],"/Users/hey/Downloads/shop641/src/reportWebVitals.js",[],[],"/Users/hey/Downloads/shop641/src/App.js",[],[],"/Users/hey/Downloads/shop641/src/AppNav.js",[],[],"/Users/hey/Downloads/shop641/src/config/Provider.js",["149"],[],"/Users/hey/Downloads/shop641/src/Load.js",[],[],"/Users/hey/Downloads/shop641/src/views/AdminOrders.js",["150"],[],"import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { app } from '../config/firebase'\r\nimport { getDatabase, ref, onValue, set } from 'firebase/database'\r\nimport { tables } from '../config/tables'\r\n\r\nimport { FaEdit, FaTrashAlt } from 'react-icons/fa'\r\nimport toast from 'react-hot-toast'\r\n\r\nexport default function AdminOrders() {\r\n  const navigation = useNavigate()\r\n  const [orders, setOrders] = useState([])\r\n\r\n  // Firebase Database\r\n  const db = getDatabase(app)\r\n  const dbref = ref(db, tables.orders)\r\n\r\n  const t_head = ['No', 'Puchase Date', 'Action'].map((item, index)=>(\r\n    <th colSpan={item === 'Action' ? 2 : 1} key={index}>{item}</th>\r\n  ))\r\n\r\n  useEffect(()=>{\r\n    onValue(dbref, snapshot=>{\r\n      if(snapshot.exists()){\r\n        const data = snapshot.val()\r\n        const keys = Object.keys(data)\r\n        const arr = []\r\n        keys.forEach(key=> arr.push({...data[key], id: key}))\r\n        setOrders(arr)\r\n      }else{\r\n        setOrders([])\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const viewItem = id => navigation(id)\r\n\r\n  const removeItem = id => {\r\n    const delRef = ref(db, `${tables.orders}/${id}`)\r\n    set(delRef, null)\r\n    .then(()=>{\r\n      toast.success('Order item removed successfully')\r\n    })\r\n    .catch(()=>{\r\n      toast.error('Error occurred')\r\n    })\r\n  }\r\n\r\n  const orderList = orders.length > 0 ? orders.map((item, index)=>(\r\n    <tr key={index}>\r\n      <td>{index+1}</td>\r\n      <td>{item.date}</td>\r\n      <td><FaEdit onClick={()=>viewItem(item.id)} className=\"cursor-pointer font-20\" /></td>\r\n      <td><FaTrashAlt onClick={()=>removeItem(item.id)} className=\"cursor-pointer font-20\" /></td>\r\n    </tr>\r\n  )) : <tr><td colSpan={4} className=\"center-text\">No data available</td></tr>\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"width-50 width-lx-60 width-l-70 width-m-100 width-s-100 margin-auto\">\r\n        <div className=\"bold-text font-20\">Order List</div>\r\n        <br />\r\n        <table className=\"table bordered white-bg\">\r\n          <thead>\r\n            <tr>{t_head}</tr>\r\n          </thead>\r\n          <tbody>{orderList}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","/Users/hey/Downloads/shop641/src/views/ErrorPage.js",[],[],"/Users/hey/Downloads/shop641/src/views/AdminOrderView.js",["151"],[],"import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { getDatabase, ref, onValue } from 'firebase/database'\r\nimport { app } from '../config/firebase'\r\nimport { tables } from '../config/tables'\r\n\r\nconst style = {\r\n    element: { border: '1px solid #ccc', borderRadius: 3 },\r\n}\r\n\r\nexport default function AdminOrderView() {\r\n    const { id } = useParams()\r\n    const [total, setTotal] = useState(0)\r\n    const [date, setDate] = useState('')\r\n    const [detail, setDetail] = useState({})\r\n    const [order, setOrder] = useState([])\r\n\r\n    // Firebase Database\r\n    const db = getDatabase(app)\r\n    const dbref = ref(db, `${tables.orders}/${id}`)\r\n\r\n    useEffect(()=>{\r\n        onValue(dbref, snapshot=>{\r\n            if(snapshot.exists()){\r\n                const data = snapshot.val()\r\n                setDetail(data.info)\r\n                setOrder(data.order)\r\n                setDate(data.date)\r\n                setTotal(Number(data.total))\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const orderList = order.length > 0 ? order.map((item, index)=>{\r\n        return (\r\n            <div key={index} className=\"flex-row align-items-center\" style={{ marginBottom: 15 }}>\r\n                <div className=\"prod-d-img\" style={{ backgroundImage: `url(${item.img})` }} />\r\n                <div className=\"padding-all-10 width-50\">\r\n                    <div>{item.name}</div>\r\n                    <div>Price: ${item.price.toFixed(2)}</div>\r\n                    <div>Qty: {item.qty}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }) : <></>\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"width-90 margin-auto\">\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-3 col-lx-5 col-l-6 col-m-12 col-s-12 padding-all-10\">\r\n                    <div className=\"font-20 bold-text\">Customer Details</div>\r\n                    <br />\r\n                    <div>Name</div>\r\n                    <div style={style.element} className=\"padding-all-10 white-bg\">\r\n                        {detail.name}\r\n                    </div>\r\n                    <br />\r\n\r\n                    <div>Address</div>\r\n                    <div style={style.element} className=\"padding-all-10 white-bg\">\r\n                        {detail.address}\r\n                    </div>\r\n                    <br />\r\n\r\n                    <div>Email</div>\r\n                    <div style={style.element} className=\"padding-all-10 white-bg\">\r\n                        {detail.email}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-9 col-lx-7 col-l-12 col-m-12 col-s-12 padding-all-10\">\r\n\r\n                    <div className=\"font-20 bold-text\">\r\n                        {`Orders on ${date} - Total => $${total}`}\r\n                    </div>\r\n\r\n                    <div className=\"padding-all-20\">\r\n                        <div>\r\n                            {orderList}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","/Users/hey/Downloads/shop641/src/views/Orders.js",["152"],[],"import React, {useState, useContext, useEffect} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Context } from '../config/Provider'\r\n\r\nexport default function Orders() {\r\n    const { id } = useParams()\r\n    const state = useContext(Context)\r\n    const [date, setDate] = useState('')\r\n    const [order, setOrder] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const orders = state.info?.orders ?? []\r\n        const ord = orders[id]\r\n        setDate(ord?.date ?? '')\r\n        setOrder(ord?.order ?? [])\r\n    }, [])\r\n\r\n    const orderList = order.length > 0 ? order.map((item, index)=>{\r\n        return (\r\n            <div key={index} className=\"flex-row align-items-center\" style={{ marginBottom: 15 }}>\r\n                <div className=\"prod-d-img\" style={{ backgroundImage: `url(${item.img})` }} />\r\n                <div className=\"padding-all-10 width-50\">\r\n                    <div>{item.name}</div>\r\n                    <div>Price: ${item.price.toFixed(2)}</div>\r\n                    <div>Qty: {item.qty}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }) : <></>\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"padding-all-20\" />\r\n        <div className=\"center-text font-20 bold-text\">\r\n            {`Orders on ${date}`}\r\n        </div>\r\n        <br />\r\n        <div className=\"padding-all-20\">\r\n            <div className=\"width-30 width-lx-45 width-l-60 width-m-100 width-s-100 margin-auto\">\r\n                {orderList}\r\n            </div>\r\n        </div>\r\n        <div className=\"padding-all-20\" />\r\n    </div>\r\n  )\r\n}\r\n","/Users/hey/Downloads/shop641/src/views/Cart.js",["153","154"],[],"import React, {useState, useEffect, useContext} from 'react'\r\nimport { Context } from '../config/Provider'\r\nimport { FaMinusSquare, FaPlusSquare } from \"react-icons/fa\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\n\r\nimport { app } from '../config/firebase';\r\nimport { getDatabase, ref, set, push } from 'firebase/database';\r\nimport { tables } from '../config/tables';\r\nimport Button from '../components/Button';\r\n\r\nexport default function Cart() {\r\n    const state = useContext(Context)\r\n    const navigation = useNavigate()\r\n    const [cart, setCart] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [pay, setPay] = useState(false)\r\n    const toggle = () => setPay(!pay)\r\n\r\n    // Firebase Database\r\n    const db = getDatabase(app)\r\n    const userRef = ref(db, `${tables.users}/${state?.info?.id}`)\r\n    const dbref = ref(db, tables.orders)\r\n\r\n    useEffect(()=>{\r\n    }, [])\r\n\r\n    const plus = id => {\r\n        const c = [...state.cart]\r\n        const new_c = c.map(item=>{\r\n            if(item.id === id){\r\n                item['qty'] = item['qty'] + 1\r\n            }\r\n            return item\r\n        })\r\n        state.pushCart(new_c)\r\n        localStorage.setItem('cart', JSON.stringify(new_c))\r\n    }\r\n\r\n    const minus = id => {\r\n        const findItem = state.cart.find(item=>item.id === id)\r\n        if(findItem['qty'] - 1 === 0){\r\n            const f = state.cart.filter(item=>item.id !== id)\r\n            state.pushCart(f)\r\n            localStorage.setItem('cart', JSON.stringify(f))\r\n            if(f.length === 0) navigation('/')\r\n        }else{\r\n            const c = [...state.cart]\r\n            const new_c = c.map(item=>{\r\n                if(item.id === id){\r\n                    item['qty'] = item['qty'] - 1\r\n                }\r\n                return item\r\n            })\r\n            state.pushCart(new_c)\r\n            localStorage.setItem('cart', JSON.stringify(new_c))\r\n        }\r\n    }\r\n\r\n    const cartList = state.cart.length > 0 ? state.cart.map((item, index)=>{\r\n        return (\r\n            <div key={index} className=\"flex-row align-items-center\" style={{ marginBottom: 15 }}>\r\n                <div className=\"prod-d-img\" style={{ backgroundImage: `url(${item.img})` }} />\r\n                <div className=\"padding-all-10 width-50\">\r\n                    <div>{item.name}</div>\r\n                    <div>${item.price.toFixed(2)}</div>\r\n                </div>\r\n                <div className=\"padding-all-10\">\r\n                    <div className=\"flex-row align-items-center\">\r\n                        <div className=\"font-20\" style={{ marginRight:10 }}>\r\n                            <FaMinusSquare onClick={()=>minus(item.id)} className=\"cursor-pointer\" />\r\n                        </div>\r\n                        <div className=\"font-20\" style={{ marginRight:10 }}>{item.qty}</div>\r\n                        <div className=\"font-20\">\r\n                            <FaPlusSquare onClick={()=>plus(item.id)} className=\"cursor-pointer\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }) : <></>\r\n\r\n    const submit = async(e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        const order = {\r\n            info: {\r\n                name: state?.info?.name, \r\n                email: state?.info?.email, \r\n                address: state?.info?.address\r\n            }, \r\n            order: state.cart, total: state.total,\r\n            date: new Date().toLocaleDateString(),\r\n        }\r\n        // push it to the order database\r\n        let pOrder = {date: order.date, order: order.order, total: order.total}\r\n        let infoOrder = state.info?.orders ?? []\r\n        infoOrder = [...infoOrder, pOrder]\r\n\r\n        push(dbref, order)\r\n        .then(()=>{\r\n            const userObj = {...state.info, orders: infoOrder}\r\n            set(userRef, userObj)\r\n            .then(()=>{\r\n                state.updateInfo(userObj)\r\n                localStorage.removeItem('cart')\r\n                localStorage.setItem('user', userObj)\r\n                setLoading(false)\r\n                toast.success('Payment record saved sucsessfully')\r\n                state.pushCart([])\r\n                navigation('/')\r\n            })\r\n            .catch(()=>{\r\n                setLoading(false)\r\n                toast.error('Failed to order info for customer')\r\n            })\r\n        })\r\n        .catch(()=>{\r\n            setLoading(false)\r\n            toast.error('Failed to store shopping info in database')\r\n        })\r\n\r\n    }\r\n\r\n    const goToSignIn = () => {\r\n        localStorage.setItem('redirect-url', '/cart')\r\n        navigation('/account-login')\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"padding-all-20\" />\r\n        <div className=\"width-90 margin-auto\">\r\n            <div className=\"row\">\r\n                <div className=\"col-8 col-l-12 col-m-12 col-s-12\">\r\n                    <div className=\"bold-text font-20\">Cart Items</div>\r\n                    <br />\r\n                    {cartList}\r\n                </div>\r\n\r\n                <div className=\"col-1 col-l-12 col-m-12 col-s-12\"></div>\r\n\r\n                <div className=\"col-3 col-l-12 col-m-12 col-s-12\">\r\n                    <div className=\"cart-details\">\r\n                        <div \r\n                            className=\"padding-all-10 center-text bold-text font-20 uppercase\" \r\n                            style={{ borderBottom: '1px solid #ccc' }}\r\n                        >\r\n                            Cart Details\r\n                        </div>\r\n                        <div className=\"padding-all-10\">\r\n                            <div className=\"flex-row justify-content-space-between\">\r\n                                <div>SubTotal </div>\r\n                                <div>${state.total}</div>\r\n                            </div>\r\n                            <br />\r\n                            <hr />\r\n                            <br />\r\n                            <div className=\"flex-row justify-content-space-between\">\r\n                                <div>Total </div>\r\n                                <div>${state.total}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"padding-all-10\">\r\n                            {\r\n                                pay\r\n                                ?\r\n                                <>\r\n                                    {\r\n                                        state.info\r\n                                        ?\r\n                                        <>\r\n                                            <br />\r\n                                            <form onSubmit={submit}>\r\n                                                <div className=\"font-20 bold-text\">Payment Form</div>\r\n                                                <br />\r\n                                                <div \r\n                                                    className=\"padding-all-10\" \r\n                                                    style={{ border: '1px solid #ccc', borderRadius: 3, marginBottom: 10 }}\r\n                                                >\r\n                                                    {state.info.name}\r\n                                                </div>\r\n                                                <div \r\n                                                    className=\"padding-all-10\" \r\n                                                    style={{ border: '1px solid #ccc', borderRadius: 3, marginBottom: 10 }}\r\n                                                >\r\n                                                    {state.info.address}\r\n                                                </div>\r\n                                                <div \r\n                                                    className=\"padding-all-10\" \r\n                                                    style={{ border: '1px solid #ccc', borderRadius: 3, marginBottom: 10 }}\r\n                                                >\r\n                                                    {state.info.email}\r\n                                                </div>\r\n                                                <br />\r\n                                                <Button name=\"Pay\" loading={loading} />\r\n                                            </form>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <div>You need to sign in to continue.</div>\r\n                                            <div>\r\n                                                <span \r\n                                                    onClick={goToSignIn}\r\n                                                    className=\"cursor-pointer red-hover\"\r\n                                                    style={{ borderBottom: '2px solid rgb(0, 34, 68)'}}\r\n                                                >\r\n                                                    Sign in\r\n                                                </span>\r\n                                            </div>\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                                :\r\n                                <>\r\n                                <br />\r\n                                <button onClick={toggle} className=\"red-bg white-text width-100\">Checkout</button>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"padding-all-20\" />\r\n    </div>\r\n  )\r\n}\r\n","/Users/hey/Downloads/shop641/src/views/AccountLogin.js",["155"],[],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Input from '../components/Input'\r\nimport Button from '../components/Button'\r\n\r\nimport { app } from '../config/firebase'\r\nimport { getDatabase, ref, onValue, push } from 'firebase/database'\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth'\r\nimport toast from 'react-hot-toast'\r\nimport { tables } from '../config/tables'\r\nimport { Context } from '../config/Provider'\r\n\r\nexport default function AccountLogin() {\r\n    const navigation = useNavigate()\r\n    const contextState = useContext(Context)\r\n    const [users, setUsers] = useState([])\r\n    const [state, setState] = useState({name: '', address: '', email: '', password: ''})\r\n    const [reg, setReg] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const toggle = () => setReg(!reg)\r\n    const onChange = obj => setState({...state, ...obj})\r\n\r\n    // Firebase Database\r\n    const db = getDatabase(app)\r\n    const dbref = ref(db, tables.users)\r\n\r\n    // Firebase Auth\r\n    const auth = getAuth(app)\r\n\r\n    useEffect(()=>{\r\n        onValue(dbref, snapshot=>{\r\n            if(snapshot.exists()){\r\n                const data = snapshot.val()\r\n                const arr = []\r\n                const keys = Object.keys(data)\r\n                keys.forEach(key=> arr.push({...data[key], id: key}))\r\n                setUsers(arr)\r\n            }else{\r\n                setUsers([])\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        if(reg){\r\n            const {address, email, name, password} = state\r\n            if(address && email && password && name){\r\n                createUserWithEmailAndPassword(auth, email, password)\r\n                .then(userCredential=>{\r\n                    const obj = {address, email, name}\r\n                    push(dbref, obj)\r\n                    .then(()=>{\r\n                        setLoading(false)\r\n                        toast.success('Account created!')\r\n                        toggle()\r\n                    })\r\n                    .catch(()=>{\r\n                        setLoading(false)\r\n                        toast.error('Error occurred while saving data')\r\n                    })\r\n                })\r\n                .catch(err=>{\r\n                    setLoading(false)\r\n                    const error = err.message.split('/')[1].split(')')[0]\r\n                    toast.error(error)\r\n                })\r\n            }else{\r\n                setLoading(false)\r\n                toast.error('All the fields are required')\r\n            }\r\n        }else{\r\n            const {email, password} = state\r\n            if(email && password){\r\n                signInWithEmailAndPassword(auth, email, password)\r\n                .then(userCrendential=>{\r\n                    const findUser = users.find(item=>item.email.toLowerCase() === email.toLowerCase())\r\n                    if(findUser){\r\n                        contextState.updateInfo(findUser)\r\n                        setLoading(false)\r\n                        localStorage.setItem('user', JSON.stringify(findUser))\r\n                        const redirectUrl = localStorage.getItem('redirect-url')\r\n                        if(redirectUrl) navigation(redirectUrl)\r\n                        else navigation('/account')\r\n                    }else{\r\n                        setLoading(false)\r\n                        toast.error('User data was not found')\r\n                    }\r\n                })\r\n                .catch(err=>{\r\n                    setLoading(false)\r\n                    const error = err.message.split('/')[1].split(')')[0]\r\n                    toast.error(error)\r\n                })\r\n            }else{\r\n                setLoading(false)\r\n                toast.error('All the fields are required')\r\n            }\r\n        }\r\n    }\r\n  return (\r\n    <div className=\"min-height-1001\">\r\n        <div className=\"padding-all-20\" />\r\n        <div className=\"width-30 width-lx-45 width-l-60 width-m-80 width-s-90 add-form white-bg margin-auto\">\r\n            <div \r\n                className=\"padding-all-10 center-text bold-text font-18\" \r\n                style={{ borderBottom: '1px solid #ccc' }}\r\n            >\r\n                {reg ? 'Create Account' : 'Login'}\r\n            </div>\r\n            <br />\r\n            <form className=\"padding-all-10\" onSubmit={onSubmit}>\r\n                {\r\n                    reg\r\n                    ?\r\n                    <>\r\n                        <Input \r\n                            value={state.name} \r\n                            onChange={(e)=>onChange({name: e.target.value})} \r\n                            type=\"text\" \r\n                            placeholder=\"Enter fullname\" />\r\n                        <br />\r\n                        <br />\r\n                        <Input \r\n                            value={state.address} \r\n                            onChange={(e)=>onChange({address: e.target.value})} \r\n                            type=\"text\" \r\n                            placeholder=\"Enter address\" />\r\n                        <br />\r\n                        <br />\r\n                    </>\r\n                    :\r\n                    <></>\r\n                }\r\n                <Input \r\n                    value={state.email} \r\n                    onChange={(e)=>onChange({email: e.target.value})} \r\n                    type=\"email\" \r\n                    placeholder=\"Enter Email\" />\r\n                <br />\r\n                <br />\r\n                <Input \r\n                    value={state.password} \r\n                    onChange={(e)=>onChange({password: e.target.value})} \r\n                    type=\"password\" \r\n                    placeholder=\"Enter password\" />\r\n                <br />\r\n                <br />\r\n                <div className=\"font-14 center-text\">{reg ? 'Already have an account?' : \"Don't have an account?\"} <span onClick={toggle} className=\"cursor-pointer\" style={{ borderBottom: '2px solid rgb(0, 34, 68)' }}>{reg ? 'Sign-In' : 'Sign-Up'}</span></div>\r\n                <br />\r\n                <Button name={reg ? 'Create Account' : 'Login'} loading={loading} />\r\n            </form>\r\n            <div className=\"padding-all-10\" />\r\n        </div>\r\n        <div className=\"padding-all-20\" />\r\n    </div>\r\n  )\r\n}\r\n","/Users/hey/Downloads/shop641/src/views/Account.js",["156"],[],"import React, { useContext, useEffect, useState } from 'react'\r\nimport Auth from '../components/Auth'\r\nimport { Context } from '../config/Provider'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { FaEdit, FaTrashAlt } from 'react-icons/fa'\r\n\r\nimport { app } from '../config/firebase'\r\nimport { getDatabase, ref, set } from 'firebase/database'\r\nimport { tables } from '../config/tables'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst style = {\r\n  element: { border: '1px solid #ccc', borderRadius: 3 },\r\n}\r\n\r\nexport default function Account() {\r\n  const state = useContext(Context)\r\n  const navigation = useNavigate()\r\n  const [orders, setOrders] = useState([])\r\n  const t_head = ['No', 'Puchase Date', 'Action'].map((item, index)=>(\r\n    <th colSpan={item === 'Action' ? 2 : 1} key={index}>{item}</th>\r\n  ))\r\n\r\n  // Firebase Database\r\n  const db = getDatabase(app)\r\n  const dbref = ref(db, `${tables.users}/${state.info?.id ?? ''}`)\r\n\r\n  useEffect(()=>{\r\n    setOrders(state.info?.orders ?? [])\r\n  }, [])\r\n\r\n  const removeItem = index => {\r\n    const new_o = orders.filter((item, i)=> index !== i)\r\n    const obj = {...state.info, orders: new_o}\r\n    set(dbref, obj)\r\n    .then(()=>{\r\n      state.updateInfo(obj)\r\n      localStorage.setItem('user', JSON.stringify(obj))\r\n      toast.success('Order item removed successfully')\r\n      window.location.reload()\r\n    })\r\n    .catch(()=>{\r\n      toast.error('Error occurred')\r\n    })\r\n  }\r\n\r\n  const viewItem = index => navigation(`orders/${index}`)\r\n\r\n  const orderList = orders.length > 0 ? orders.map((item, index)=>(\r\n    <tr key={index}>\r\n      <td>{index+1}</td>\r\n      <td>{item.date}</td>\r\n      <td><FaEdit onClick={()=>viewItem(index)} className=\"cursor-pointer font-20\" /></td>\r\n      <td><FaTrashAlt onClick={()=>removeItem(index)} className=\"cursor-pointer font-20\" /></td>\r\n    </tr>\r\n  )) : <tr><td colSpan={4} className=\"center-text\">No data available</td></tr>\r\n\r\n  return (\r\n    <Auth>\r\n      <div>\r\n        <div className=\"padding-all-20\" />\r\n\r\n        <div className=\"width-90 margin-auto\">\r\n          <div className=\"row\">\r\n\r\n            <div className=\"col-3 col-lx-6 col-l-8 col-m-12 col-s-12 padding-all-10\">\r\n              <div className=\"bold-text font-20\">Account Information</div>\r\n              <br />\r\n              <div className=\"bold-text\">Fullname</div>\r\n              <div className=\"padding-all-10\" style={style.element}>{state.info?.name ?? ''}</div>\r\n              <br />\r\n\r\n              <div className=\"bold-text\">Address</div>\r\n              <div className=\"padding-all-10\" style={style.element}>{state.info?.address ?? ''}</div>\r\n              <br />\r\n\r\n              <div className=\"bold-text\">Email</div>\r\n              <div className=\"padding-all-10\" style={style.element}>{state.info?.email ?? ''}</div>\r\n            </div>\r\n\r\n            <div className=\"col-9 col-lx-12 col-l-12 col-m-12 col-s-12 padding-all-10\">\r\n              <div className=\"width-90 width-m-100 width-s-100 margin-auto\">\r\n                <div className=\"bold-text font-20\">Purchase List</div>\r\n                <br />\r\n\r\n                <table className=\"table bordered\">\r\n                  <thead>\r\n                    <tr>{t_head}</tr>\r\n                  </thead>\r\n                  <tbody>{orderList}</tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"padding-all-20\" />\r\n      </div>\r\n    </Auth>\r\n  )\r\n}\r\n","/Users/hey/Downloads/shop641/src/views/HomeLayout.js",[],[],"/Users/hey/Downloads/shop641/src/views/AdminProdEdit.js",["157"],[],"import React, {useEffect, useState} from 'react'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\n\r\nimport { app } from '../config/firebase'\r\nimport { getDatabase, ref, set, onValue } from 'firebase/database'\r\nimport { getDownloadURL, uploadBytes, getStorage, ref as storageRef, deleteObject } from 'firebase/storage'\r\nimport { tables } from '../config/tables'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport Button from '../components/Button'\r\nimport Input from '../components/Input'\r\n\r\nexport default function AdminProdEdit() {\r\n    const { id } = useParams()\r\n    const navigation = useNavigate()\r\n    const [product, setProduct] = useState({})\r\n    const [img, setImg] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const onChange = obj => setProduct({...product, ...obj})\r\n\r\n    const onFile = e => {\r\n        const file = e.target.files[0]\r\n        if(!file) return\r\n        setImg(file)\r\n    }\r\n\r\n    // Firebase Database\r\n    const db = getDatabase(app)\r\n    const dbref = ref(db, `${tables.products}/${id}`)\r\n\r\n    // Firebase Storage\r\n    const storage = getStorage(app)\r\n\r\n    useEffect(()=>{\r\n        onValue(dbref, snapshot=>{\r\n            if(snapshot.exists()){\r\n                const data = snapshot.val()\r\n                setProduct(data)\r\n                console.log(data)\r\n            }else{\r\n                setProduct({})\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        if(img){\r\n            const {name, price} = product\r\n            if(name && price){\r\n                const rand = Math.floor(Math.random() * 1000000000)\r\n                const storage_Ref = storageRef(storage, `shop-images/image${rand}`)\r\n\r\n                uploadBytes(storage_Ref, img).then((snapshot)=>{\r\n                    getDownloadURL(snapshot.ref).then(url=>{\r\n                        const pObj = {name, price: Number(price), img: url}\r\n                        \r\n                        set(dbref, pObj).then(()=>{\r\n                            const deleteRef = storageRef(storage, product.img)\r\n                            deleteObject(deleteRef)\r\n                            .then(()=>{\r\n                                setLoading(false)\r\n                                toast.success('Product updated successfully')\r\n                                navigation('/admin/products')\r\n                            })\r\n                            .catch(()=>{\r\n                                setLoading(false)\r\n                                toast.error('Failed to delete old image')\r\n                                navigation('/admin/products')\r\n                            })\r\n                        })\r\n                        .catch(err=>{\r\n                            setLoading(false)\r\n                            toast.success('Failed to add product')\r\n                        })\r\n                    })\r\n                })\r\n            }else{\r\n                setLoading(false)\r\n                toast.error('All the fields are required')\r\n            }\r\n        }else{\r\n            const {name, price} = product\r\n            if(name && price){\r\n                set(dbref, {...product, price: Number(product.price)})\r\n                .then(()=>{\r\n                    setLoading(false)\r\n                    toast.success('Product updated successfully')\r\n                    navigation('/admin/products')\r\n                })\r\n                .catch(()=>{\r\n                    setLoading(false)\r\n                    toast.error('Failed to update product record')\r\n                })\r\n            }else{\r\n                setLoading(false)\r\n                toast.error('All the fields are required')\r\n            }\r\n        }\r\n    }\r\n  return (\r\n    <div>\r\n        <div className=\"width-40 width-lx-45 width-l-60 width-m-80 width-s-90 margin-auto add-form white-bg\">\r\n            <div \r\n                className=\"bold-text font-20 center-text uppercase padding-all-10\"\r\n                style={{ borderBottom: '1px solid #ccc' }}\r\n            >\r\n                Edit Product\r\n            </div>\r\n            <br />\r\n\r\n            <div className=\"flex-column justify-content-center align-items-center\">\r\n                <div className=\"prodImg\">\r\n                    {product?.img ? <img src={product.img} className=\"img\" alt=\"\" /> : <></>}\r\n                </div>\r\n            </div>\r\n            <br />\r\n\r\n            <form className=\"padding-all-10\" onSubmit={onSubmit}>\r\n                <div>\r\n                    <label className=\"bold-text\">Product Name</label>\r\n                    <Input \r\n                        disabled={true}\r\n                        onChange={(e)=>onChange({name: e.target.value})}\r\n                        type=\"text\"\r\n                        value={product.name}\r\n                        placeholder='Product Name'\r\n                    />\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <label className=\"bold-text\">Price</label>\r\n                    <Input \r\n                        onChange={(e)=>onChange({price: e.target.value})}\r\n                        type=\"number\"\r\n                        value={product.price}\r\n                        placeholder='Product Name'\r\n                        min={0}\r\n                    />\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <label className=\"bold-text\">Product Image</label>\r\n                    <input \r\n                        onChange={onFile}\r\n                        type=\"file\"\r\n                    />\r\n                </div>\r\n                <br />\r\n                <Button name=\"Update Product\" loading={loading} />\r\n            </form>\r\n            <br />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","/Users/hey/Downloads/shop641/src/views/Home.js",["158"],[],"import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { app } from '../config/firebase'\r\nimport {getDatabase, ref, onValue} from 'firebase/database'\r\nimport { tables } from '../config/tables'\r\nimport { Context } from '../config/Provider'\r\n\r\nexport default function Home() {\r\n    const state = useContext(Context)\r\n    const [products, setProducts] = useState([])\r\n    const [allProd, setAllProd] = useState([])\r\n\r\n    // Firebase\r\n    const db = getDatabase(app)\r\n    const dbref = ref(db, tables.products)\r\n\r\n    useEffect(()=>{\r\n        onValue(dbref, snapshot=>{\r\n            if(snapshot.exists()){\r\n                const data = snapshot.val()\r\n                const arr = []\r\n                const keys = Object.keys(data)\r\n                keys.forEach(key=> arr.push({...data[key], id: key}))\r\n                setProducts(arr)\r\n                setAllProd(arr)\r\n            }else{\r\n                setProducts([])\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const add = item => {\r\n        if(state.cartNo === 0){\r\n            const c = [{...item, qty: 1}]\r\n            state.pushCart(c)\r\n            localStorage.setItem('cart', JSON.stringify(c))\r\n        }else{\r\n            const findItem = state.cart.find(el=>el.id === item.id)\r\n            if(findItem){\r\n                const c = [...state.cart]\r\n                const newC = c.map(el=>{\r\n                    if(el.id === item.id){\r\n                        el['qty'] = el['qty'] + 1\r\n                    }\r\n                    return el\r\n                })\r\n                state.pushCart(newC)\r\n                localStorage.setItem('cart', JSON.stringify(newC))\r\n            }else{\r\n                const c = [...state.cart, {...item, qty: 1}]\r\n                state.pushCart(c)\r\n                localStorage.setItem('cart', JSON.stringify(c))\r\n            }\r\n        }\r\n    }\r\n\r\n    const prod_list = products.length > 0 ? products.map((item, index)=>(\r\n        <div className=\"col-2 col-lx-3 col-l-4 col-m-6 col-s-6 padding-all-10\" key={index}>\r\n            {/* <div><img src={item.img} className=\"imgProd\" alt=\"\" /></div> */}\r\n            <div className=\"prod-image\" style={{ backgroundImage: `url(${item.img})` }} />\r\n            <div>{item.name}</div>\r\n            <div>${item.price.toFixed(2)}</div>\r\n            <div><button className=\"add\" onClick={()=>add(item)}>Add</button></div>\r\n        </div>\r\n    )) : <div className=\"col-12 padding-all-10\">No product available for display</div>\r\n\r\n    const filter = text => {\r\n        if(text === ''){\r\n            setProducts(allProd)\r\n            return\r\n        }\r\n\r\n        const arr = []\r\n        products.forEach(item=>{\r\n            if(item.name.toLowerCase().indexOf(text.toLowerCase()) > -1){\r\n                arr.push(item)\r\n            }\r\n        })\r\n        setProducts(arr)\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"navy-blue-bg\">\r\n            <div className=\"flex-row-reverse width-95 margin-auto\">\r\n                <div className=\"width-30 width-l-45 width-m-60 width-s-70\">\r\n                    <input placeholder=\"Search for a product\" onChange={(e)=>filter(e.target.value)} />\r\n                </div>\r\n            </div>\r\n            <br />\r\n        </div>\r\n        <br />\r\n        <div className=\"width-95 margin-auto\">\r\n            <div className=\"row\">{prod_list}</div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","/Users/hey/Downloads/shop641/src/views/AdminProducts.js",["159"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { getDatabase, onValue, ref, set } from 'firebase/database'\r\nimport { deleteObject, getStorage, ref as storageRef } from 'firebase/storage'\r\nimport { app } from '../config/firebase'\r\nimport { tables } from '../config/tables'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport { FiTrash, FiEdit3 } from \"react-icons/fi\"\r\n\r\nexport default function AdminProducts() {\r\n    const navigation = useNavigate()\r\n    const [products, setProducts] = useState([])\r\n\r\n    // Firebase Database\r\n    const db = getDatabase(app)\r\n    const dbref = ref(db, tables.products)\r\n\r\n    // Firebase Storage\r\n    const storage = getStorage(app)\r\n\r\n    useEffect(()=>{\r\n        onValue(dbref, snapshot=>{\r\n            if(snapshot.exists()){\r\n                const data = snapshot.val()\r\n                const arr = []\r\n                const keys = Object.keys(data)\r\n                keys.forEach(key => arr.push({...data[key], id: key}))\r\n                setProducts(arr)\r\n            }else{\r\n                setProducts([])\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const edit = id => navigation(`/admin/product/edit/${id}`)\r\n\r\n    const delProd = id => {\r\n        toast.success('Delete initiated')\r\n        const findProd = products.find(item=>item.id === id)\r\n        if(!findProd) return\r\n        set(ref(db, `${tables.products}/${id}`), null)\r\n        .then(()=> {\r\n            const deleteRef = storageRef(storage, findProd.img)\r\n            deleteObject(deleteRef)\r\n            .then(()=> toast.success('Product deleted successfully'))\r\n            .catch(()=> toast.error('Product deleted but product image failed to delete'))\r\n        })\r\n        .catch(()=> toast.error('Error occurred while deleting product'))\r\n    }\r\n\r\n    const t_head = ['No', 'Name', 'Price', 'Action'].map((item, index)=>(\r\n        <th key={index} colSpan={item === 'Action' ? 2 : 1}>{item}</th>\r\n    ))\r\n\r\n    const productList = products.length > 0 ? products.map((item, index)=>(\r\n        <tr key={index}>\r\n            <td>{index+1}</td>\r\n            <td>{item.name}</td>\r\n            <td>{item.price}</td>\r\n            <td><FiEdit3 className=\"cursor-pointer\" onClick={()=>edit(item.id)} /></td>\r\n            <td><FiTrash className=\"cursor-pointer\" onClick={()=>delProd(item.id)} /></td>\r\n        </tr>\r\n    )) : (\r\n        <tr>\r\n            <td colSpan=\"5\" className=\"center-text\">No products</td>\r\n        </tr>\r\n    )\r\n\r\n  return (\r\n    <>\r\n        <div className=\"width-90 margin-auto\">\r\n            <div className=\"flex-row-reverse\">\r\n                <button className=\"add-prod\" onClick={()=>navigation('/admin/addproduct')}>\r\n                    Add Products\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <br />\r\n\r\n        <div className=\"width-60 width-l-80 width-m-95 width-s-100 margin-auto white-bg\">\r\n            <table className=\"table bordered\">\r\n                <thead><tr>{t_head}</tr></thead>\r\n                <tbody>{productList}</tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div className=\"padding-all-20\" />\r\n    </>\r\n  )\r\n}\r\n","/Users/hey/Downloads/shop641/src/views/AdminProdAdd.js",[],[],"/Users/hey/Downloads/shop641/src/views/AdminDash.js",[],[],"/Users/hey/Downloads/shop641/src/views/AdminLayout.js",[],[],"/Users/hey/Downloads/shop641/src/views/AdminLogin.js",["160"],[],"import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Input from '../components/Input'\r\nimport Button from '../components/Button'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport { app } from '../config/firebase'\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth'\r\n\r\nexport default function AdminLogin() {\r\n    const navigation = useNavigate()\r\n    const [state, setState] = useState({email: '', password: ''})\r\n    const [loading, setLoading] = useState(false)\r\n    const onChange = obj => setState({...state, ...obj})\r\n\r\n    // Firebase Authentication\r\n    const auth = getAuth(app)\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        const {email, password} = state\r\n        if(email && password) {\r\n            /* Create admin account*/\r\n            // createUserWithEmailAndPassword(auth, email, password)\r\n            // .then(userCredential=>{\r\n            //     setLoading(false)\r\n            //     toast.success('Account created')\r\n            // })\r\n            // .catch(err=>{\r\n            //     setLoading(false)\r\n            //     const error = err.message.split('/')[1].split(')')[0]\r\n            //     toast.error(error)\r\n            // })\r\n\r\n            // Verify Admin\r\n            signInWithEmailAndPassword(auth, email, password)\r\n            .then(userCredential=>{\r\n                setLoading(false)\r\n                localStorage.setItem('shop-admin', email)\r\n                navigation('/admin')\r\n            })\r\n            .catch(err=>{\r\n                setLoading(false)\r\n                const error = err.message.split('/')[1].split(')')[0]\r\n                toast.error(error)\r\n            })\r\n        }else{\r\n            setLoading(false)\r\n            toast.error('All the fields are required')\r\n        }\r\n    }\r\n  return (\r\n    <div className=\"width-100 height-100 flex-column justify-content-center align-items-center off-white-bg\">\r\n        <div className=\"width-30 width-lx-40 width-l-50 width-m-80 width-s-90 padding-all-20 white-bg\" style={{ borderRadius: 3 }}>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"font-20 bold-text\">Admin Login</div>\r\n                <br />\r\n                <Input type=\"email\" value={state.email} onChange={e=>onChange({email: e.target.value})} placeholder=\"Enter email\"/>\r\n                <br />\r\n                <br />\r\n                <Input type=\"password\" value={state.password} onChange={e=>onChange({password: e.target.value})} placeholder=\"Enter email\"/>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <Button name=\"Login\" loading={loading} />\r\n            </form>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","/Users/hey/Downloads/shop641/src/config/firebase.js",[],[],"/Users/hey/Downloads/shop641/src/config/tables.js",[],[],"/Users/hey/Downloads/shop641/src/components/Auth.js",["161"],[],"import { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function Auth({children}) {\r\n  const navigation = useNavigate()\r\n  useEffect(()=>{\r\n    const user = localStorage.getItem('user')\r\n    if(!user) {\r\n      navigation('/account-login')\r\n    }\r\n  }, [])\r\n  return (\r\n    <>{children}</>\r\n  )\r\n}\r\n","/Users/hey/Downloads/shop641/src/components/Input.js",[],[],"/Users/hey/Downloads/shop641/src/components/Button.js",[],[],"/Users/hey/Downloads/shop641/src/components/AuthAdmin.js",["162"],[],"import { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function AuthAdmin({children}) {\r\n  const navigation = useNavigate()\r\n  useEffect(()=>{\r\n    const user = localStorage.getItem('shop-admin')\r\n    if(!user) {\r\n      navigation('/admin-login')\r\n    }\r\n  }, [])\r\n  return (\r\n    <>{children}</>\r\n  )\r\n}\r\n",{"ruleId":"163","severity":1,"message":"164","line":14,"column":21,"nodeType":"165","messageId":"166","endLine":14,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":35,"column":6,"nodeType":"169","endLine":35,"endColumn":8,"suggestions":"170"},{"ruleId":"167","severity":1,"message":"168","line":33,"column":8,"nodeType":"169","endLine":33,"endColumn":10,"suggestions":"171"},{"ruleId":"167","severity":1,"message":"172","line":16,"column":8,"nodeType":"169","endLine":16,"endColumn":10,"suggestions":"173"},{"ruleId":"163","severity":1,"message":"174","line":15,"column":12,"nodeType":"165","messageId":"166","endLine":15,"endColumn":16},{"ruleId":"163","severity":1,"message":"175","line":15,"column":18,"nodeType":"165","messageId":"166","endLine":15,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":42,"column":8,"nodeType":"169","endLine":42,"endColumn":10,"suggestions":"176"},{"ruleId":"167","severity":1,"message":"177","line":31,"column":6,"nodeType":"169","endLine":31,"endColumn":8,"suggestions":"178"},{"ruleId":"167","severity":1,"message":"168","line":44,"column":8,"nodeType":"169","endLine":44,"endColumn":10,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"168","line":30,"column":8,"nodeType":"169","endLine":30,"endColumn":10,"suggestions":"180"},{"ruleId":"167","severity":1,"message":"168","line":35,"column":8,"nodeType":"169","endLine":35,"endColumn":10,"suggestions":"181"},{"ruleId":"163","severity":1,"message":"182","line":8,"column":19,"nodeType":"165","messageId":"166","endLine":8,"endColumn":49},{"ruleId":"167","severity":1,"message":"183","line":11,"column":6,"nodeType":"169","endLine":11,"endColumn":8,"suggestions":"184"},{"ruleId":"167","severity":1,"message":"183","line":11,"column":6,"nodeType":"169","endLine":11,"endColumn":8,"suggestions":"185"},"no-unused-vars","'setAppName' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dbref'. Either include it or remove the dependency array.","ArrayExpression",["186"],["187"],"React Hook useEffect has missing dependencies: 'id' and 'state.info?.orders'. Either include them or remove the dependency array.",["188"],"'cart' is assigned a value but never used.","'setCart' is assigned a value but never used.",["189"],"React Hook useEffect has a missing dependency: 'state.info?.orders'. Either include it or remove the dependency array.",["190"],["191"],["192"],["193"],"'createUserWithEmailAndPassword' is defined but never used.","React Hook useEffect has a missing dependency: 'navigation'. Either include it or remove the dependency array.",["194"],["195"],{"desc":"196","fix":"197"},{"desc":"196","fix":"198"},{"desc":"199","fix":"200"},{"desc":"196","fix":"201"},{"desc":"202","fix":"203"},{"desc":"196","fix":"204"},{"desc":"196","fix":"205"},{"desc":"196","fix":"206"},{"desc":"207","fix":"208"},{"desc":"207","fix":"209"},"Update the dependencies array to be: [dbref]",{"range":"210","text":"211"},{"range":"212","text":"211"},"Update the dependencies array to be: [id, state.info?.orders]",{"range":"213","text":"214"},{"range":"215","text":"211"},"Update the dependencies array to be: [state.info?.orders]",{"range":"216","text":"217"},{"range":"218","text":"211"},{"range":"219","text":"211"},{"range":"220","text":"211"},"Update the dependencies array to be: [navigation]",{"range":"221","text":"222"},{"range":"223","text":"222"},[1046,1048],"[dbref]",[1030,1032],[530,532],"[id, state.info?.orders]",[1552,1554],[1011,1013],"[state.info?.orders]",[1413,1415],[972,974],[1140,1142],[296,298],"[navigation]",[305,307]]